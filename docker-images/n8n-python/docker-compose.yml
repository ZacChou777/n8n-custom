services:
  traefik:
    image: "traefik"
    restart: always
    command:
      - "--api=true"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      # - "--entrypoints.web.http.redirections.entryPoint.to=websecure"
      # - "--entrypoints.web.http.redirections.entrypoint.scheme=https"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.leresolver.acme.tlschallenge=true"
      - "--certificatesresolvers.leresolver.acme.email=${SSL_EMAIL}"
      - "--certificatesresolvers.leresolver.acme.storage=/letsencrypt/acme.json"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - traefik_data:/letsencrypt
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - n8n-network

  n8n:
    platform: linux/amd64
    image: naskio/n8n-python:${N8N_VERSION}
    container_name: n8n-python
    restart: always
    ports:
      - "127.0.0.1:5678:5678"
    labels:
      - traefik.enable=true
      - traefik.http.routers.n8n.rule=Host(`${SUBDOMAIN}.${DOMAIN_NAME}`)
      - traefik.http.routers.n8n.entrypoints=web,websecure
      - traefik.http.routers.n8n.tls=true
      - traefik.http.routers.n8n.tls.certresolver=leresolver
      # 安全头中间件
      # - traefik.http.middlewares.n8n-headers.headers.sslRedirect=true
      - traefik.http.middlewares.n8n-headers.headers.stsSeconds=315360000
      - traefik.http.middlewares.n8n-headers.headers.browserXssFilter=true
      - traefik.http.middlewares.n8n-headers.headers.contentTypeNosniff=true
      - traefik.http.middlewares.n8n-headers.headers.forceSTSHeader=true
      - traefik.http.middlewares.n8n-headers.headers.SSLHost=${DOMAIN_NAME}
      - traefik.http.middlewares.n8n-headers.headers.STSIncludeSubdomains=true
      - traefik.http.middlewares.n8n-headers.headers.STSPreload=true
      # SSE支持中间件
      - traefik.http.middlewares.n8n-sse.compress=true
      - traefik.http.middlewares.n8n-sse.buffering.maxResponseBodyBytes=0
      # 中间件链
      - traefik.http.routers.n8n.middlewares
    environment:
      - N8N_HOST=${DOMAIN_NAME}
      - N8N_PORT=5678
      - N8N_PROTOCOL=https
      - NODE_ENV=production
      - WEBHOOK_URL=http://${DOMAIN_NAME}/
      - GENERIC_TIMEZONE=${GENERIC_TIMEZONE}
      - N8N_COMMUNITY_PACKAGES_ALLOW_TOOL_USAGE=true
      - N8N_QUEUE_BULL_REDIS_HOST=redis
      - N8N_QUEUE_BULL_REDIS_PORT=6379
      - N8N_QUEUE_BULL_REDIS_DB=0
      - N8N_QUEUE_BULL_REDIS_PASSWORD=test
      - N8N_REDIS_HOST=redis
      - N8N_REDIS_PORT=6379
      - N8N_REDIS_DB=0
      - N8N_REDIS_PASSWORD=test
      - NODE_FUNCTION_ALLOW_EXTERNAL=node-fetch
      - NODE_FUNCTION_ALLOW_BUILTIN=*
    volumes:
      - n8n_data:/home/node/.n8n
      - ./local-files:/files
    networks:
      - n8n-network
    depends_on:
      redis:
        condition: service_healthy

  redis:
    image: redis:latest
    container_name: redis
    restart: always
    ports:
      - '6379:6379'
      # 需要取的内部ＩＰ来连线　如172.21.0.3
    volumes:
      - redis_data:/data
      - ./redis.conf:/usr/local/etc/redis/redis.conf
      - ./logs:/logs
    command: redis-server /usr/local/etc/redis/redis.conf --requirepass test
    networks:
      - n8n-network
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "test", "ping"]
      interval: 5s
      timeout: 3s
      retries: 3

volumes:
  n8n_data:
  traefik_data:
  redis_data:

networks:
  n8n-network:
    driver: bridge